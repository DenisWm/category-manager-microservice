buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}


plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.flywaydb.flyway' version '9.11.0'
}

group = 'com.course.admin.catalogo.infrastructure'

bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    implementation project(':domain')
    implementation project(':application')

    implementation('mysql:mysql-connector-java')
    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.14')
    implementation('org.springdoc:springdoc-openapi-ui:1.6.14')

    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    implementation 'com.google.cloud:google-cloud-storage:2.17.1'

    implementation 'org.yaml:snakeyaml:1.33'

    testImplementation(project(path: ':domain', configuration: 'testClasses'))
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test:2.4.8'
    testImplementation 'org.flywaydb:flyway-core'
    testImplementation 'org.flywaydb:flyway-mysql'
    testImplementation 'org.springframework.security:spring-security-test'


    testImplementation("com.github.javafaker:javafaker:1.0.2")

    testImplementation('org.testcontainers:testcontainers:1.17.6')
    testImplementation('org.testcontainers:mysql:1.17.6')
    testImplementation('org.testcontainers:junit-jupiter:1.17.6')

    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}